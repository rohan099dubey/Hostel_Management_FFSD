<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Student Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <style>
      .gradient {
        background: linear-gradient(90deg, #004aad 0%, #cb6ce6 100%);
      }
      .meal-item {
        padding: 0.5rem;
        border-bottom: 1px solid #e5e7eb; /* Light gray border between items */
      }
      .meal-item:last-child {
        border-bottom: none; /* Remove border for the last item */
      }
      /* Hide scrollbar for Chrome, Safari and Opera */
      .scrollbar-hide::-webkit-scrollbar {
        display: none;
      }
      .scrollbar-hide {
        -ms-overflow-style: none;
        scrollbar-width: none;
      }

      /* Set up a container that shows 6 problems at once (2 rows x 3 columns) */
      .overflow-x-auto {
        overflow-x: auto;
        max-width: calc(350px * 3 + 1.5rem * 2);
        margin: 0 auto;
      }

      /* For two rows */
      .grid-cols-3 > div:nth-child(n + 7) {
        margin-top: 1.5rem;
      }

      .problem-container {
        width: calc(
          350px * 3 + 2rem * 5
        ); /* 3 cards per row + padding + increased gap */
        height: 700px; /* Height for 2 rows of problems + some padding */
        margin: 0 auto;
        overflow-y: auto;
        border: 1px solid #e5e7eb;
        border-radius: 0.5rem;
        background-color: #f9fafb;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
          0 2px 4px -1px rgba(0, 0, 0, 0.06);
      }

      /* Custom scrollbar styling */
      .problem-container::-webkit-scrollbar {
        width: 8px;
      }

      .problem-container::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 4px;
      }

      .problem-container::-webkit-scrollbar-thumb {
        background: #d1d5db;
        border-radius: 4px;
      }

      .problem-container::-webkit-scrollbar-thumb:hover {
        background: #9ca3af;
      }

      .warden-container {
        width: 100%;
        height: 480px; /* Reduced height to show exactly 6 cards (2 rows x 3 columns) */
        margin: 0 auto;
        overflow-y: auto;
        border: 1px solid #e5e7eb;
        border-radius: 0.5rem;
        background-color: #f9fafb;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
          0 2px 4px -1px rgba(0, 0, 0, 0.06);
      }

      /* Custom scrollbar styling */
      .warden-container::-webkit-scrollbar {
        width: 8px;
      }

      .warden-container::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 4px;
      }

      .warden-container::-webkit-scrollbar-thumb {
        background: #d1d5db;
        border-radius: 4px;
      }

      .warden-container::-webkit-scrollbar-thumb:hover {
        background: #9ca3af;
      }

      /* For two rows of cards (6 cards total) */
      @media (min-width: 1024px) {
        .warden-container .grid-cols-3 > div:nth-child(n + 7) {
          margin-top: 1.5rem;
        }
      }

      /* Override the problem container width for better centering */
      .problem-container {
        width: calc(
          350px * 3 + 2rem * 5
        ); /* 3 cards per row + padding + increased gap */
        max-width: 100%;
        margin: 0 auto;
      }

      /* Ensure all cards are at the same height */
      .grid-cols-3 {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 2rem;
        padding: 1rem;
      }

      /* Base card styles - no transform in initial state */
      .problem-card {
        height: 100%;
        display: flex;
        flex-direction: column;
        transform: none !important;
        transition: all 0.3s ease;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
          0 2px 4px -1px rgba(0, 0, 0, 0.06);
        margin: 0 !important;
      }

      /* Apply transform ONLY on hover */
      .problem-card:hover {
        transform: translateY(-0.25rem) !important;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
          0 4px 6px -2px rgba(0, 0, 0, 0.05);
      }

      /* Essential structure for consistent card heights */
      .problem-card .relative {
        flex-shrink: 0;
      }

      .problem-card > div:last-child {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
      }

      /* Consistent title heights */
      .problem-card h3 {
        height: 3.5rem;
        margin-bottom: 0.75rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }
    </style>
  </head>
  <body class="">
    <%- include('../navbar.ejs',{loggedIn}) %>
    <h1 class="text-5xl font-bold text-gray-900 pt-40 text-center">
      Dashboard
      <div class="w-full mb-10">
        <div
          class="h-1 mx-auto bg-gradient-to-r from-pink-500 to-purple-600 w-64 opacity-50 my-4 rounded"
        ></div>
      </div>
    </h1>

    <div
      class="flex justify-center items-center w-full bg-gray-100 p-4 sm:p-8 md:p-20"
    >
      <div class="bg-white p-4 sm:p-8 rounded-2xl shadow-xl w-full">
        <div class="flex flex-col md:flex-row items-center gap-4 md:gap-8">
          <!-- Profile Image -->
          <div class="md:w-1/3 flex justify-center">
            <div class="relative">
              <img
                src="/images/OIP.jpg"
                alt="Profile Photo"
                class="w-32 h-32 sm:w-48 sm:h-48 rounded-full object-cover border-4 border-yellow-800 shadow-lg"
              />
              <div
                class="absolute -bottom-2 left-1/2 transform -translate-x-1/2"
              >
                <span
                  class="bg-pink-500 text-white px-3 py-1 rounded-full text-sm font-medium"
                  >Admin</span
                >
              </div>
            </div>
          </div>

          <!-- Student Details -->
          <div class="md:w-2/3 space-y-4 text-center md:text-left">
            <div>
              <h2 class="text-2xl sm:text-3xl font-bold text-gray-800">
                <%=userInfo.name %>
              </h2>
              <p class="text-blue-600 font-medium"><%=userInfo.rollNo %></p>
            </div>

            <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
              <div class="bg-gray-50 p-3 rounded-lg">
                <p class="text-gray-500 text-sm">Email</p>
                <p class="text-gray-800 font-medium"><%=userInfo.email %></p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="container mx-auto px-6 py-8">
      <!-- Action Shortcuts (Moved above Problem Statistics) -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
        <!-- Mess Feedback Card -->
        <div
          class="bg-white rounded-lg shadow-lg p-6 flex flex-col justify-between hover:shadow-xl transition-shadow duration-300"
        >
          <div class="flex items-center justify-between mb-4">
            <h3 class="text-xl font-semibold text-gray-800">Mess Feedback</h3>
            <div class="p-2 rounded-full bg-indigo-100 text-indigo-500">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-6 w-6"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z"
                />
              </svg>
            </div>
          </div>
          <p class="text-gray-600 mb-4">
            View and analyze student feedback for the mess menu.
          </p>
          <a
            href="/services/feedback"
            class="block text-center py-2 px-4 bg-indigo-500 text-white rounded-lg hover:bg-indigo-600 transition duration-300 font-semibold"
            >View Feedback</a
          >
        </div>
        <!-- Student List Card -->
        <div
          class="bg-white rounded-lg shadow-lg p-6 flex flex-col justify-between hover:shadow-xl transition-shadow duration-300"
        >
          <div class="flex items-center justify-between mb-4">
            <h3 class="text-xl font-semibold text-gray-800">Student List</h3>
            <div class="p-2 rounded-full bg-indigo-100 text-indigo-500">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-6 w-6"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0z"
                />
              </svg>
            </div>
          </div>
          <p class="text-gray-600 mb-4">
            View and manage students, check fee status, and send reminders.
          </p>
          <a
            href="/student-list"
            class="block text-center py-2 px-4 bg-indigo-500 text-white rounded-lg hover:bg-indigo-600 transition duration-300 font-semibold"
            >Fees Management</a
          >
        </div>
      </div>
      <!-- End Action Shortcuts -->

      <!-- Problem Statistics Card -->
      <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
        <div
          class="flex flex-col sm:flex-row justify-between items-start gap-4 mb-4"
        >
          <h3 class="text-xl font-bold text-gray-900">Problem Statistics</h3>
          <div class="flex flex-col sm:flex-row gap-4 w-full sm:w-auto">
            <!-- Hostel Filter -->
            <select
              id="hostelFilter"
              class="w-full sm:w-auto bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5"
            >
              <option value="all">All Hostels</option>
              <option value="BH-1">BH-1</option>
              <option value="BH-2">BH-2</option>
              <option value="BH-3">BH-3</option>
              <option value="BH-4">BH-4</option>
            </select>

            <!-- Date Filter -->
            <select
              id="dateFilter"
              class="w-full sm:w-auto bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5"
            >
              <option value="all">All Time</option>
              <option value="7">Last 7 Days</option>
              <option value="30">Last 30 Days</option>
              <option value="90">Last 90 Days</option>
            </select>
          </div>
        </div>

        <!-- Pie Chart Container -->
        <div id="problemsPieChart" class="w-full h-[400px]"></div>

        <!-- Statistics Summary -->
        <div class="grid grid-cols-3 gap-4 mt-6">
          <div class="bg-yellow-50 p-4 rounded-lg">
            <h4 class="text-yellow-800 font-semibold">Pending</h4>
            <p id="pendingCount" class="text-2xl font-bold text-yellow-600">
              0
            </p>
          </div>
          <div class="bg-green-50 p-4 rounded-lg">
            <h4 class="text-green-800 font-semibold">Resolved</h4>
            <p id="resolvedCount" class="text-2xl font-bold text-green-600">
              0
            </p>
          </div>
          <div class="bg-red-50 p-4 rounded-lg">
            <h4 class="text-red-800 font-semibold">Rejected</h4>
            <p id="rejectedCount" class="text-2xl font-bold text-red-600">0</p>
          </div>
        </div>

        <!-- Add To Be Confirmed count -->
        <div class="mt-4">
          <div class="bg-blue-50 p-4 rounded-lg">
            <h4 class="text-blue-800 font-semibold">To Be Confirmed</h4>
            <p id="toBeConfirmedCount" class="text-2xl font-bold text-blue-600">
              0
            </p>
          </div>
        </div>
      </div>
    </div>

    <div class="container mx-auto px-6 py-8">
      <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
        <div class="flex justify-between items-center mb-6">
          <div>
            <h3 class="text-xl font-bold text-gray-900">
              Resolution Time Analysis
            </h3>
            <p class="text-sm text-gray-500">
              Average time taken to resolve problems by category
            </p>
          </div>
        </div>

        <!-- Bar Chart Container -->
        <div id="resolutionTimeChart" class="w-full h-[400px]"></div>
      </div>
    </div>

    <div class="container mx-auto px-6 py-8">
      <h3 class="text-2xl font-bold text-gray-900 mb-6 text-center">
        Hostel-wise Analysis
      </h3>

      <!-- Grid for hostel charts -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-8">
        <!-- BH-1 Chart -->
        <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
          <div class="flex justify-between items-center mb-4">
            <h4 class="text-xl font-bold text-gray-900">BH-1</h4>
          </div>
          <div id="BH-1-chart" class="w-full h-[300px]"></div>
        </div>

        <!-- BH-2 Chart -->
        <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
          <div class="flex justify-between items-center mb-4">
            <h4 class="text-xl font-bold text-gray-900">BH-2</h4>
          </div>
          <div id="BH-2-chart" class="w-full h-[300px]"></div>
        </div>

        <!-- BH-3 Chart -->
        <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
          <div class="flex justify-between items-center mb-4">
            <h4 class="text-xl font-bold text-gray-900">BH-3</h4>
          </div>
          <div id="BH-3-chart" class="w-full h-[300px]"></div>
        </div>

        <!-- BH-4 Chart -->
        <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
          <div class="flex justify-between items-center mb-4">
            <h4 class="text-xl font-bold text-gray-900">BH-4</h4>
          </div>
          <div id="BH-4-chart" class="w-full h-[300px]"></div>
        </div>
      </div>
    </div>

    <div class="container mx-auto px-4 sm:px-8 md:px-20 py-4 sm:py-8 mb-8">
      <div
        class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-8"
      >
        <h1 class="text-2xl sm:text-3xl font-bold text-gray-900">
          Problem Tracker
        </h1>
      </div>

      <!-- Search and Filter Section -->
      <div class="bg-white rounded-xl shadow-md p-6 mb-8">
        <div class="flex flex-col md:flex-row gap-4 items-center">
          <div class="flex-1 w-full">
            <input
              type="text"
              id="searchInput"
              placeholder="Search problems..."
              class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
            />
          </div>
          <div class="flex gap-4 w-full md:w-auto">
            <select
              id="categoryFilter"
              class="p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
            >
              <option value="">All Categories</option>
              <option value="Electrical">Electrical</option>
              <option value="Plumbing">Plumbing</option>
              <option value="Painting">Painting</option>
              <option value="Carpentry">Carpentry</option>
              <option value="Cleaning">Cleaning</option>
              <option value="Internet">Internet</option>
              <option value="Furniture">Furniture</option>
              <option value="Pest Control">Pest Control</option>
              <option value="Other">Other</option>
            </select>
            <select
              id="statusFilter"
              class="p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
            >
              <option value="">All Status</option>
              <option value="Pending">Pending</option>
              <option value="ToBeConfirmed">To Be Confirmed</option>
              <option value="Resolved">Resolved</option>
              <option value="Rejected">Rejected</option>
            </select>
          </div>
        </div>
      </div>

      <div id="problem-container" class="relative mb-8">
        <div class="problem-container">
          <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 p-2">
            <% problems.forEach(problem => { %>
            <div
              data-modal-target="problem-modal<%= problem._id %>"
              data-modal-toggle="problem-modal<%= problem._id %>"
              class="problem-card bg-white rounded-xl shadow-lg overflow-hidden cursor-pointer hover:shadow-xl transition-all duration-300 w-full"
              data-id="<%= problem._id %>"
              data-status="<%= problem.status %>"
            >
              <div class="relative h-56 w-full">
                <img
                  src="<%=problem.problemImage%>"
                  alt="<%=problem.problemTitle%>"
                  class="w-full h-full object-cover"
                />
                <div class="absolute top-4 right-4">
                  <% if (problem.status === "Pending") { %>
                  <span
                    class="px-3 py-1.5 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800"
                  >
                    Pending
                  </span>
                  <% } else if (problem.status === "Resolved") { %>
                  <span
                    class="px-3 py-1.5 rounded-full text-sm font-medium bg-green-100 text-green-800"
                  >
                    Resolved
                  </span>
                  <% } else if (problem.status === "ToBeConfirmed") { %>
                  <span
                    class="px-3 py-1.5 rounded-full text-sm font-medium bg-blue-100 text-blue-800"
                  >
                    To Be Confirmed
                  </span>
                  <% } else if (problem.status === "Rejected") { %>
                  <span
                    class="px-3 py-1.5 rounded-full text-sm font-medium bg-red-100 text-red-800"
                  >
                    Rejected
                  </span>
                  <% } %>
                </div>
              </div>
              <div class="p-6 flex-grow flex flex-col justify-between">
                <h3
                  class="text-xl font-bold text-gray-900 mb-3 h-14 overflow-hidden"
                >
                  <%= problem.problemTitle %>
                </h3>
                <div class="flex items-center space-x-3 mt-auto">
                  <span
                    class="bg-blue-100 text-blue-800 px-3 py-1.5 rounded-full text-sm font-medium"
                  >
                    <%= problem.category %>
                  </span>
                  <span class="text-gray-600 text-sm flex items-center">
                    <svg
                      class="w-4 h-4 mr-1"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path
                        d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"
                      />
                    </svg>
                    <%= problem.hostel %>
                  </span>
                </div>
              </div>
            </div>

            <div
              id="problem-modal<%= problem._id %>"
              class="modal fixed inset-0 bg-black bg-opacity-50 items-center justify-center hidden z-50"
            >
              <div
                class="bg-white rounded-xl p-8 w-full max-w-4xl max-h-[90vh] overflow-y-auto m-4"
              >
                <div class="flex justify-between items-center mb-6">
                  <h2
                    id="detailsTitle"
                    class="text-2xl font-bold text-gray-900"
                  >
                    <%= problem.problemTitle %>
                  </h2>

                  <button
                    type="button"
                    class="text-gray-400 hover:text-gray-600 transition-colors duration-200"
                    data-modal-toggle="problem-modal<%= problem._id %>"
                  >
                    <svg
                      class="w-6 h-6"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M6 18L18 6M6 6l12 12"
                      />
                    </svg>
                  </button>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                  <div class="rounded-xl overflow-hidden shadow-lg">
                    <img
                      id="detailsImage"
                      src="<%=problem.problemImage%>"
                      alt="<%=problem.problemTitle%>"
                      class="w-full h-auto object-cover"
                    />
                  </div>

                  <div class="space-y-6">
                    <div class="flex items-center space-x-3">
                      <% if (problem.status === "Pending") { %>
                      <span
                        class="px-3 py-1.5 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800"
                      >
                        Pending
                      </span>
                      <% } else if (problem.status === "Resolved") { %>
                      <span
                        class="px-3 py-1.5 rounded-full text-sm font-medium bg-green-100 text-green-800"
                      >
                        Resolved
                      </span>
                      <% } else if (problem.status === "ToBeConfirmed") { %>
                      <span
                        class="px-3 py-1.5 rounded-full text-sm font-medium bg-blue-100 text-blue-800"
                      >
                        To Be Confirmed
                      </span>
                      <% } else if (problem.status === "Rejected") { %>
                      <span
                        class="px-3 py-1.5 rounded-full text-sm font-medium bg-red-100 text-red-800"
                      >
                        Rejected
                      </span>
                      <% } %>
                      <span
                        class="bg-blue-100 text-blue-800 px-3 py-1.5 rounded-full text-sm font-medium"
                      >
                        <%= problem.category %>
                      </span>
                    </div>

                    <div>
                      <h4 class="text-sm font-semibold text-gray-600 mb-2">
                        Description
                      </h4>
                      <p class="text-gray-800 leading-relaxed">
                        <%= problem.problemDescription %>
                      </p>
                    </div>

                    <div class="border-t border-gray-200 pt-6">
                      <h4 class="text-sm font-semibold text-gray-600 mb-4">
                        Problem Details
                      </h4>
                      <div class="grid grid-cols-2 gap-6">
                        <div>
                          <p class="text-sm text-gray-600">Roll Number</p>
                          <p class="font-medium text-gray-900">
                            <%= problem.studentId %>
                          </p>
                        </div>
                        <div>
                          <p class="text-sm text-gray-600">Hostel</p>
                          <p class="font-medium text-gray-900">
                            <%= problem.hostel %>
                          </p>
                        </div>
                        <div>
                          <p class="text-sm text-gray-600">Room Number</p>
                          <p class="font-medium text-gray-900">
                            <%= problem.roomNumber %>
                          </p>
                        </div>
                      </div>
                    </div>

                    <% if (userInfo.role !== 'student') { %>
                    <div class="border-t border-gray-200 pt-6">
                      <h4 class="text-sm font-semibold text-gray-600 mb-4">
                        Status Management
                      </h4>

                      <% if (problem.status === 'ToBeConfirmed') { %>
                      <div class="mb-4 p-3 bg-blue-50 rounded-lg">
                        <p class="text-blue-800 font-medium">
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="h-5 w-5 inline-block mr-1"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                          >
                            <path
                              fill-rule="evenodd"
                              d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2h-1V9z"
                              clip-rule="evenodd"
                            />
                          </svg>
                          Waiting for student to confirm if the problem has been
                          properly resolved.
                        </p>
                        <p class="text-sm text-blue-600 mt-1">
                          You'll be notified when the student confirms or
                          rejects the resolution.
                        </p>
                      </div>
                      <% } %> <% if (problem.status !== 'Resolved' &&
                      problem.status !== 'Rejected') { %>
                      <form
                        class="statusForm grid grid-cols-1 md:grid-cols-4 gap-3 w-full"
                        data-problem-id="<%= problem._id %>"
                      >
                        <input
                          type="hidden"
                          name="problemId"
                          class="problemIdInput"
                          value="<%= problem._id %>"
                        />
                        <select
                          name="status"
                          class="statusSelect col-span-3 bg-gray-50 border border-gray-300 text-gray-900 rounded-lg p-3 focus:ring-blue-500 focus:border-blue-500 transition duration-200 text-sm"
                        >
                          <option disabled selected>Select Status</option>
                          <option value="Pending">Pending</option>
                          <option value="Resolved">
                            Mark as Resolved (Needs Student Confirmation)
                          </option>
                          <% if (userInfo.role === 'admin') { %>
                          <option value="Rejected">Rejected</option>
                          <% } %>
                        </select>
                        <button
                          type="submit"
                          class="col-span-1 px-4 py-3 bg-gradient-to-r from-blue-500 to-purple-600 hover:bg-blue-700 text-white font-semibold rounded-lg shadow-md transition duration-200 whitespace-nowrap text-sm"
                        >
                          Update
                        </button>
                      </form>
                      <% } %> <% if (problem.status === 'Resolved') { %>
                      <div class="p-3 bg-green-50 rounded-lg">
                        <p class="text-green-800 font-medium">
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="h-5 w-5 inline-block mr-1"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                          >
                            <path
                              fill-rule="evenodd"
                              d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                              clip-rule="evenodd"
                            />
                          </svg>
                          This problem has been confirmed as resolved by the
                          student.
                        </p>
                        <p class="text-sm text-green-600 mt-1">
                          Problem was fully resolved on <%= new
                          Date(problem.timeResolved).toLocaleDateString() %> at
                          <%= new
                          Date(problem.timeResolved).toLocaleTimeString() %>
                        </p>
                      </div>
                      <% } %> <% if (problem.status === 'Rejected') { %>
                      <div class="p-3 bg-red-50 rounded-lg mt-2">
                        <p class="text-red-800 font-medium flex items-center">
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="h-5 w-5 inline-block mr-1"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                          >
                            <path
                              fill-rule="evenodd"
                              d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                              clip-rule="evenodd"
                            />
                          </svg>
                          This problem was rejected by the administrator.
                        </p>
                        <p class="text-sm text-red-600 mt-1">
                          Problem was rejected on <%= new
                          Date(problem.updatedAt).toLocaleDateString() %> at <%=
                          new Date(problem.updatedAt).toLocaleTimeString() %>
                        </p>
                      </div>
                      <% } %>
                    </div>
                    <% } %>
                  </div>
                </div>
              </div>
            </div>
            <% }) %>
          </div>
        </div>
      </div>
    </div>

    <div
      id="warden-details"
      class="container mx-auto px-4 sm:px-8 md:px-20 py-4 sm:py-8 mb-8"
    >
      <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
        <!-- Header with flat design -->
        <div class="bg-blue-600 px-6 py-8">
          <div
            class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4"
          >
            <div>
              <h3 class="text-2xl font-bold text-white mb-1">
                Warden Management
              </h3>
              <p class="text-blue-100 text-sm">
                Manage and add wardens for different hostels
              </p>
            </div>
            <button
              data-modal-target="add-warden-modal"
              data-modal-toggle="add-warden-modal"
              class="group bg-white text-blue-700 font-medium py-2.5 px-5 rounded-lg hover:bg-opacity-90 transition-all duration-300 shadow-lg flex items-center gap-2"
            >
              <span
                class="w-6 h-6 rounded-full bg-blue-100 flex items-center justify-center group-hover:bg-blue-700 group-hover:text-white transition-all duration-300"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-4 w-4"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fill-rule="evenodd"
                    d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z"
                    clip-rule="evenodd"
                  />
                </svg>
              </span>
              Add New Warden
            </button>
          </div>
        </div>

        <!-- Warden cards in fixed-height vertical scrollable container -->
        <div class="px-6 py-8">
          <% if (allUsers.filter(user => user.role === 'warden').length === 0) {
          %>
          <div class="text-center py-12">
            <div
              class="w-24 h-24 bg-blue-50 rounded-full flex items-center justify-center mx-auto mb-6"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-12 w-12 text-blue-300"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                />
              </svg>
            </div>
            <h4 class="text-xl font-semibold text-gray-700 mb-2">
              No Wardens Yet
            </h4>
            <p class="text-gray-500 max-w-md mx-auto">
              Add wardens to manage your hostels and oversee student issues
              efficiently.
            </p>
          </div>
          <% } else { %>
          <div class="warden-container relative">
            <div
              class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 p-4"
            >
              <% allUsers.filter(user => user.role ===
              'warden').forEach(function(warden) { %>
              <div
                class="group relative bg-white rounded-xl overflow-hidden border border-gray-200 transition-all duration-300 hover:shadow-xl"
              >
                <!-- Colored side indicator -->
                <div
                  class="absolute left-0 top-0 h-full w-1.5 bg-blue-600"
                ></div>

                <!-- Content with padding to account for side indicator -->
                <div class="p-5 pl-7">
                  <!-- Warden Avatar and Name -->
                  <div class="flex items-center mb-4">
                    <div class="relative flex-shrink-0 mr-4">
                      <div
                        class="w-14 h-14 rounded-full bg-blue-600 flex items-center justify-center text-white font-bold text-lg"
                      >
                        <%= warden.name.charAt(0).toUpperCase() %>
                      </div>
                    </div>
                    <div>
                      <h4
                        class="font-bold text-lg text-gray-900 group-hover:text-blue-700 transition-colors"
                      >
                        <%= warden.name %>
                      </h4>
                      <p class="text-sm text-gray-500 truncate max-w-[150px]">
                        <%= warden.email %>
                      </p>
                    </div>
                  </div>

                  <!-- Hostel Details -->
                  <div class="mb-5">
                    <div class="flex items-center">
                      <div
                        class="w-8 h-8 rounded-lg bg-blue-50 flex items-center justify-center mr-3"
                      >
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          class="h-4 w-4 text-blue-600"
                          fill="none"
                          viewBox="0 0 24 24"
                          stroke="currentColor"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"
                          />
                        </svg>
                      </div>
                      <div>
                        <p class="text-xs text-gray-500">Hostel</p>
                        <p class="font-medium text-gray-900">
                          <%= warden.hostel %>
                        </p>
                      </div>
                    </div>
                  </div>

                  <!-- Actions -->
                  <div class="flex space-x-3">
                    <button
                      class="delete-warden-btn w-full bg-white border border-red-200 text-red-600 hover:bg-red-50 rounded-lg py-2 text-sm font-medium transition-colors duration-300 flex items-center justify-center"
                      data-warden-id="<%= warden._id %>"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-4 w-4 mr-1.5"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"
                        />
                      </svg>
                      Remove
                    </button>
                  </div>
                </div>
              </div>
              <% }); %>
            </div>
          </div>
          <% } %>
        </div>
      </div>

      <!-- Redesigned Add Warden Modal -->
      <div
        id="add-warden-modal"
        tabindex="-1"
        aria-hidden="true"
        class="fixed top-0 left-0 right-0 z-50 hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full"
      >
        <div class="relative w-full max-w-md max-h-full">
          <div class="relative bg-white rounded-2xl shadow-2xl overflow-hidden">
            <!-- Modal header with illustration -->
            <div class="pt-8 px-6 pb-0">
              <div class="flex justify-between items-start">
                <div>
                  <h3 class="text-xl font-bold text-gray-900">
                    Add New Warden
                  </h3>
                  <p class="text-sm text-gray-500 mt-1">
                    Enter warden details below
                  </p>
                </div>
                <button
                  type="button"
                  class="text-gray-400 bg-transparent hover:bg-gray-100 hover:text-gray-900 rounded-lg text-sm p-2 inline-flex items-center"
                  data-modal-hide="add-warden-modal"
                >
                  <svg
                    class="w-5 h-5"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                      clip-rule="evenodd"
                    ></path>
                  </svg>
                </button>
              </div>

              <!-- Illustration -->
              <div class="flex justify-center -mb-1 mt-4">
                <div
                  class="w-32 h-32 bg-blue-100 rounded-full flex items-center justify-center"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-20 w-20 text-blue-600"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="1.5"
                      d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"
                    />
                  </svg>
                </div>
              </div>
            </div>

            <!-- Form with curved top -->
            <div class="bg-gray-50 rounded-t-3xl px-6 py-6 mt-2">
              <form id="addWardenForm" class="space-y-5">
                <div>
                  <label
                    for="warden_name"
                    class="block text-sm font-medium text-gray-700 mb-1"
                    >Warden Name</label
                  >
                  <div class="mt-1 relative rounded-md shadow-sm">
                    <div
                      class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-5 w-5 text-gray-400"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                        />
                      </svg>
                    </div>
                    <input
                      type="text"
                      name="name"
                      id="warden_name"
                      class="bg-white focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg text-sm"
                      placeholder="Enter warden's full name"
                      required
                    />
                  </div>
                </div>

                <div>
                  <label
                    for="warden_email"
                    class="block text-sm font-medium text-gray-700 mb-1"
                    >Email Address</label
                  >
                  <div class="mt-1 relative rounded-md shadow-sm">
                    <div
                      class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-5 w-5 text-gray-400"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                        />
                      </svg>
                    </div>
                    <input
                      type="email"
                      name="email"
                      id="warden_email"
                      class="bg-white focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg text-sm"
                      placeholder="example@university.edu"
                      required
                    />
                  </div>
                </div>

                <div>
                  <label
                    for="warden_hostel"
                    class="block text-sm font-medium text-gray-700 mb-1"
                    >Assigned Hostel</label
                  >
                  <div class="mt-1 relative rounded-md shadow-sm">
                    <div
                      class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-5 w-5 text-gray-400"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"
                        />
                      </svg>
                    </div>
                    <select
                      name="hostel"
                      id="warden_hostel"
                      class="bg-white focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg text-sm"
                      required
                    >
                      <option value="" disabled selected>
                        Select a hostel
                      </option>
                      <option value="BH-1">BH-1</option>
                      <option value="BH-2">BH-2</option>
                      <option value="BH-3">BH-3</option>
                      <option value="BH-4">BH-4</option>
                    </select>
                  </div>
                </div>

                <div>
                  <label
                    for="warden_password"
                    class="block text-sm font-medium text-gray-700 mb-1"
                    >Password</label
                  >
                  <div class="mt-1 relative rounded-md shadow-sm">
                    <div
                      class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-5 w-5 text-gray-400"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"
                        />
                      </svg>
                    </div>
                    <input
                      type="password"
                      name="password"
                      id="warden_password"
                      class="bg-white focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg text-sm"
                      placeholder="Create a secure password"
                      required
                    />
                  </div>
                  <p class="text-xs text-gray-500 mt-1">
                    Password should be at least 8 characters
                  </p>
                </div>

                <div class="pt-4">
                  <button
                    type="submit"
                    class="w-full bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-white py-3.5 px-5 transition-colors flex items-center justify-center gap-2"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      class="h-5 w-5"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke="currentColor"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"
                      />
                    </svg>
                    Add Warden
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
    <input
      type="hidden"
      id="allProblemsData"
      value="<%= JSON.stringify(problems) %>"
    />

    <%- include('../footer.ejs') %>
    <script>
      if (
        document.getElementById("default-table") &&
        typeof simpleDatatables.DataTable !== "undefined"
      ) {
        const dataTable = new simpleDatatables.DataTable("#default-table", {
          searchable: false,
          perPageSelect: false,
        });
      }
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Add event listeners to all status forms
        document.querySelectorAll(".statusForm").forEach((form) => {
          form.addEventListener("submit", async function (event) {
            event.preventDefault();

            // Find the status and problemId within this specific form
            const status = this.querySelector(".statusSelect").value;
            const problemId = this.querySelector(".problemIdInput").value;

            if (!status || !problemId) {
              Swal.fire({
                title: "Error!",
                text: "Please select a status and ensure problem ID is present.",
                icon: "error",
                confirmButtonColor: "#3085d6",
              });
              return;
            }

            try {
              const response = await fetch("/services/problems/statusChange", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({ status, problemId }),
              });

              if (!response.ok) {
                const error = await response.json();
                throw new Error(error.message || "Error updating status");
              }

              Swal.fire({
                title: "Success!",
                text: "Status updated successfully!",
                icon: "success",
                confirmButtonColor: "#3085d6",
              }).then(() => location.reload());
            } catch (error) {
              console.error("Error:", error);
              Swal.fire({
                title: "Error!",
                text:
                  error.message ||
                  "An error occurred while updating the status.",
                icon: "error",
                confirmButtonColor: "#3085d6",
              });
            }
          });
        });
      });
    </script>
    <script src="/js/adminDashboard.js"></script>
    <script>
      // This script ensures the delete warden functionality works properly
      document.addEventListener("DOMContentLoaded", function () {
        // Add event listeners to all delete buttons using the class
        document.querySelectorAll(".delete-warden-btn").forEach((btn) => {
          btn.addEventListener("click", function (e) {
            e.preventDefault();
            const warderId = this.getAttribute("data-warden-id");
            if (warderId) {
              deleteWarden(warderId);
            } else {
              console.error("No warden ID found on button");
              alert("Error: Could not identify warden to delete");
            }
          });
        });

        // Add warden form submission handler
        const addWardenForm = document.getElementById("addWardenForm");
        if (addWardenForm) {
          addWardenForm.addEventListener("submit", async function (e) {
            e.preventDefault();

            const formData = {
              name: document.getElementById("warden_name").value,
              email: document.getElementById("warden_email").value,
              hostel: document.getElementById("warden_hostel").value,
              password: document.getElementById("warden_password").value,
              role: "warden",
            };

            try {
              const response = await fetch("/services/users/add-warden", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify(formData),
              });

              if (response.ok) {
                Swal.fire({
                  title: "Success!",
                  text: "Warden added successfully!",
                  icon: "success",
                  confirmButtonColor: "#3085d6",
                }).then(() => location.reload());
              } else {
                const error = await response.json();
                Swal.fire({
                  title: "Error!",
                  text: error.message || "Error adding warden",
                  icon: "error",
                  confirmButtonColor: "#3085d6",
                });
              }
            } catch (error) {
              console.error("Error:", error);
              Swal.fire({
                title: "Error!",
                text: "An error occurred while adding the warden.",
                icon: "error",
                confirmButtonColor: "#3085d6",
              });
            }
          });
        }
      });

      async function deleteWarden(warderId) {
        try {
          const result = await Swal.fire({
            title: "Are you sure?",
            text: "Do you want to delete this warden? This action cannot be undone.",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, delete it!",
          });

          if (result.isConfirmed) {
            const response = await fetch(
              `/services/users/delete-warden/${warderId}`,
              {
                method: "DELETE",
              }
            );

            if (response.ok) {
              Swal.fire({
                title: "Deleted!",
                text: "Warden has been deleted successfully.",
                icon: "success",
              }).then(() => {
                location.reload();
              });
            } else {
              const errorData = await response.json();
              throw new Error(errorData.message || "Error deleting warden");
            }
          }
        } catch (error) {
          console.error("Delete error:", error);
          Swal.fire({
            title: "Error!",
            text:
              error.message || "An error occurred while deleting the warden.",
            icon: "error",
          });
        }
      }
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("searchInput");
        const categoryFilter = document.getElementById("categoryFilter");
        const statusFilter = document.getElementById("statusFilter");
        const problemCards = document.querySelectorAll(".problem-card");

        function filterProblems() {
          const searchTerm = searchInput.value.toLowerCase();
          const selectedCategory = categoryFilter.value;
          const selectedStatus = statusFilter.value;

          problemCards.forEach((card) => {
            const title = card.querySelector("h3").textContent.toLowerCase();
            const category = card
              .querySelector(".bg-blue-100")
              .textContent.trim();

            // Get the status element - it might not exist if ToBeConfirmed
            const statusElement = card.querySelector(
              ".absolute.top-4.right-4 span"
            );
            let status = "";

            // If status badge exists, use its text
            if (statusElement) {
              status = statusElement.textContent.trim();
            } else {
              // If no status badge found, check if there's a specific class or data attribute
              // that can identify ToBeConfirmed
              if (card.getAttribute("data-status") === "ToBeConfirmed") {
                status = "To Be Confirmed";
              }
            }

            const matchesSearch = title.includes(searchTerm);
            const matchesCategory =
              !selectedCategory || category === selectedCategory;
            const matchesStatus =
              !selectedStatus ||
              (selectedStatus === "ToBeConfirmed" &&
                status === "To Be Confirmed") ||
              (selectedStatus !== "ToBeConfirmed" && status === selectedStatus);

            if (matchesSearch && matchesCategory && matchesStatus) {
              card.style.display = "block";
            } else {
              card.style.display = "none";
            }
          });
        }

        searchInput.addEventListener("input", filterProblems);
        categoryFilter.addEventListener("change", filterProblems);
        statusFilter.addEventListener("change", filterProblems);
      });
    </script>
  </body>
</html>
